// BinaryFileSort.cpp: определяет точку входа для консольного приложения.
//

#include "stdafx.h"
#include "debugService.h"
#include "LargeBinaryFileSortClass.h"
/*

могу дать одну задачку для затравки:

вот, например, такая задачка:

Необходимо написать программу (консольное приложение), которая будет сортировать по 
возрастанию большой двоичный файл беззнаковых 32-х разрядных целых чисел. При этом:
• Размер входного файла значительно больше объема доступной оперативной памяти, которой
есть всего 128 Мб. Размер файла может быть более 4 Гигабайт. Размер файла кратен 4 байтам.
• Есть достаточно дискового пространства для хранения результата сортировки в отдельном
файле и для хранения промежуточных результатов. (как минимум, в 2 раза больше размера
входного файла)
• Программа будет компилироваться C++14 совместимым компилятором в release-конфигурации
с оптимизацией по скорости.
• Файлы будут находиться на SSD диске. На компьютере стоит современный 8-и ядерный
процессор.
• Входной файл будет находиться в той же директории что и исполняемый файл и будет
называться input. Отсортированный файл должен находиться в этой же директории и иметь
имя output.
• Поощряется разумное использование алгоритмов и контейнеров библиотеки STL.
• Поощряется разумное использование многопоточности для ускорения работы программы.
• Поощряется наличие тестов или скриптов для проверки работы программы в автоматическом
режиме.
*/
int main()
{
	DebugService debugService;
	debugService.CreateInputFile();

	LargeBinaryFileSortClass binarySorter;
	binarySorter.Sort();

    return 0;
}

